{"abi":[{"type":"function","name":"DOMAIN_SEPARATOR","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"nonces","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"permit","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"sig","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(uint256)":"141a468c","permit(address,uint256,uint256,bytes)":"745a41bc","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for token permits for ERC-725\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"the bytes32 domain separator\"}},\"nonces(uint256)\":{\"params\":{\"tokenId\":\"the index of the NFT to get the nonce of\"},\"returns\":{\"_0\":\"the uint256 representation of the nonce\"}},\"permit(address,uint256,uint256,bytes)\":{\"params\":{\"deadline\":\"a timestamp expiry for the permit\",\"sig\":\"a traditional or EIP-2098 signature\",\"spender\":\"the address to approve\",\"tokenId\":\"the index of the NFT to approve the spender on\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"Returns the domain separator used in the encoding of the signature for permits, as defined by EIP-712\"},\"nonces(uint256)\":{\"notice\":\"Returns the nonce of an NFT - useful for creating permits\"},\"permit(address,uint256,uint256,bytes)\":{\"notice\":\"Function to approve by way of owner signature\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/vrc725/contracts/interfaces/IERC4494.sol\":\"IERC4494\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@vrc25/contracts/=lib/vrc25/contracts/\",\":@vrc725/contracts/=lib/vrc725/contracts/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":vrc25/=lib/vrc25/contracts/\",\":vrc725/=lib/vrc725/contracts/\"]},\"sources\":{\"lib/vrc725/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xe5b3aa25919e5cbeaed217cabedc76ad4d4692b0cd55e6ff6ea7809ea09ce2b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4e746b268b764c11fa67de64c00bd1c014d76f00e24d725999f5a952ab6fb0f\",\"dweb:/ipfs/QmTMaBTEJyuF9Pn875nUn2mVsZkBn2rSVERVF8xv3EHPc1\"]},\"lib/vrc725/contracts/interfaces/IERC4494.sol\":{\"keccak256\":\"0xd544008e7ed429d225a40f75e6543febd4502af22759ffa818ed4771f8905c5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61ed73e4c711b2a17dc72f31f68d8a1a3852770e7ac0ca940407981fa6681ae6\",\"dweb:/ipfs/QmQTP7ffddZARKP5vANsjr7LUNGd92yDi4uMDkaqzbqpKg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"sig","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"permit"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"returns":{"_0":"the bytes32 domain separator"}},"nonces(uint256)":{"params":{"tokenId":"the index of the NFT to get the nonce of"},"returns":{"_0":"the uint256 representation of the nonce"}},"permit(address,uint256,uint256,bytes)":{"params":{"deadline":"a timestamp expiry for the permit","sig":"a traditional or EIP-2098 signature","spender":"the address to approve","tokenId":"the index of the NFT to approve the spender on"}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"Returns the domain separator used in the encoding of the signature for permits, as defined by EIP-712"},"nonces(uint256)":{"notice":"Returns the nonce of an NFT - useful for creating permits"},"permit(address,uint256,uint256,bytes)":{"notice":"Function to approve by way of owner signature"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@vrc25/contracts/=lib/vrc25/contracts/","@vrc725/contracts/=lib/vrc725/contracts/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","vrc25/=lib/vrc25/contracts/","vrc725/=lib/vrc725/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/vrc725/contracts/interfaces/IERC4494.sol":"IERC4494"},"evmVersion":"paris","libraries":{}},"sources":{"lib/vrc725/contracts/interfaces/IERC165.sol":{"keccak256":"0xe5b3aa25919e5cbeaed217cabedc76ad4d4692b0cd55e6ff6ea7809ea09ce2b1","urls":["bzz-raw://c4e746b268b764c11fa67de64c00bd1c014d76f00e24d725999f5a952ab6fb0f","dweb:/ipfs/QmTMaBTEJyuF9Pn875nUn2mVsZkBn2rSVERVF8xv3EHPc1"],"license":"MIT"},"lib/vrc725/contracts/interfaces/IERC4494.sol":{"keccak256":"0xd544008e7ed429d225a40f75e6543febd4502af22759ffa818ed4771f8905c5c","urls":["bzz-raw://61ed73e4c711b2a17dc72f31f68d8a1a3852770e7ac0ca940407981fa6681ae6","dweb:/ipfs/QmQTP7ffddZARKP5vANsjr7LUNGd92yDi4uMDkaqzbqpKg"],"license":"MIT"}},"version":1},"id":48}