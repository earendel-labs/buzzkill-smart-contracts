/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Honey, HoneyInterface } from "../../contracts/Honey";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExceededMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Fee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "FeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "estimateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405180604001604052806005815260200164484f4e455960d81b81525060405180604001604052806003815260200162484e5960e81b815250601282600590816200005f91906200016b565b5060066200006e83826200016b565b506007805460ff9290921660ff19928316179055600280546001600160a01b031916339081179091556001600a819055600091825260096020526040909120805490921617905550620000be9050565b62000237565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000ef57607f821691505b6020821081036200011057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000166576000816000526020600020601f850160051c81016020861015620001415750805b601f850160051c820191505b8181101562000162578281556001016200014d565b5050505b505050565b81516001600160401b03811115620001875762000187620000c4565b6200019f81620001988454620000da565b8462000116565b602080601f831160018114620001d75760008415620001be5750858301515b600019600386901b1c1916600185901b17855562000162565b600085815260208120601f198616915b828110156200020857888601518255948401946001909101908401620001e7565b5085821015620002275787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6111f980620002476000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063449a52f8116100c35780639dc29fac1161007c5780639dc29fac146102ae578063a9059cbb146102c1578063b429afeb146102d4578063dd62ed3e14610300578063e0dba60f14610339578063f2fde38b1461034c57600080fd5b8063449a52f81461024d57806369fe0e2d1461026257806370a082311461027557806379ba50971461029e5780638da5cb5b146101dc57806395d89b41146102a657600080fd5b80631d143848116101155780631d143848146101dc57806323b872dd146101f757806324ec75901461020a578063313ce5671461021257806332cb6b0c1461022757806342966c681461023a57600080fd5b806301ffc9a71461015257806306fdde031461018b578063095ea7b3146101a0578063127e8e4d146101b357806318160ddd146101d4575b600080fd5b610176610160366004610f35565b6001600160e01b031916630861786560e01b1490565b60405190151581526020015b60405180910390f35b61019361035f565b6040516101829190610f5f565b6101766101ae366004610fc5565b6103f1565b6101c66101c1366004610fef565b610422565b604051908152602001610182565b6008546101c6565b6002546040516001600160a01b039091168152602001610182565b610176610205366004611008565b610441565b6001546101c6565b60075460405160ff9091168152602001610182565b6101c66b204fce5e3e2502611000000081565b610176610248366004610fef565b61054f565b61026061025b366004610fc5565b61057c565b005b610260610270366004610fef565b61060b565b6101c6610283366004611044565b6001600160a01b031660009081526020819052604090205490565b610260610670565b61019361073a565b6102606102bc366004610fc5565b610749565b6101766102cf366004610fc5565b610782565b6101766102e2366004611044565b6001600160a01b031660009081526009602052604090205460ff1690565b6101c661030e36600461105f565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b610260610347366004611092565b6107a6565b61026061035a366004611044565b6107f8565b60606005805461036e906110ce565b80601f016020809104026020016040519081016040528092919081815260200182805461039a906110ce565b80156103e75780601f106103bc576101008083540402835291602001916103e7565b820191906000526020600020905b8154815290600101906020018083116103ca57829003601f168201915b5050505050905090565b6000806103fe6000610422565b905061040b3385856108a6565b6104163330836109cb565b60019150505b92915050565b6000333b1561043357506000919050565b61041c82610a45565b919050565b60008061044d83610422565b90506104598382610a5a565b6001600160a01b038616600090815260046020908152604080832033845290915290205410156104d05760405162461bcd60e51b815260206004820152601e60248201527f56524332353a20616d6f756e742065786565647320616c6c6f77616e6365000060448201526064015b60405180910390fd5b6001600160a01b038516600090815260046020908152604080832033845290915290205461050a9082906105049086610ac0565b90610ac0565b6001600160a01b0386166000908152600460209081526040808320338452909152902055610539858585610b1c565b6105448585836109cb565b506001949350505050565b60008061055c6000610422565b90506105683384610ce9565b6105733330836109cb565b50600192915050565b3360009081526009602052604090205460ff166105ab5760405162461bcd60e51b81526004016104c790611108565b6105b3610e34565b6b204fce5e3e25026110000000816105ca60085490565b6105d49190611166565b11156105f35760405163fb88d21560e01b815260040160405180910390fd5b6105fd8282610e5e565b6106076001600a55565b5050565b6002546001600160a01b031633146106355760405162461bcd60e51b81526004016104c790611179565b60018190556040518181527f8c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c769060200160405180910390a150565b6003546001600160a01b031633146106dd5760405162461bcd60e51b815260206004820152602a60248201527f56524332353a206f6e6c79206e6577206f776e65722063616e206163636570746044820152690206f776e6572736869760b41b60648201526084016104c7565b60028054600380546001600160a01b03198084166001600160a01b038381169182179096559116909155604051929091169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60606006805461036e906110ce565b3360009081526009602052604090205460ff166107785760405162461bcd60e51b81526004016104c790611108565b6106078282610ce9565b60008061078e83610422565b905061079b338585610b1c565b6104163385836109cb565b6002546001600160a01b031633146107d05760405162461bcd60e51b81526004016104c790611179565b6001600160a01b0382166000908152600960205260409020805460ff19168215151790555050565b6002546001600160a01b031633146108225760405162461bcd60e51b81526004016104c790611179565b6001600160a01b0381166108845760405162461bcd60e51b8152602060048201526024808201527f56524332353a206e6577206f776e657220697320746865207a65726f206164646044820152637265737360e01b60648201526084016104c7565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166109085760405162461bcd60e51b8152602060048201526024808201527f56524332353a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104c7565b6001600160a01b0382166109695760405162461bcd60e51b815260206004820152602260248201527f56524332353a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104c7565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b333b156109d757505050565b8015610a40576002546109f59084906001600160a01b031683610b1c565b6002546040518281526001600160a01b039182169184811691908616907ffcf5b3276434181e3c48bd3fe569b8939808f11e845d4b963693b9d7dbd6dd999060200160405180910390a45b505050565b6000610a5060015490565b61041c9083611166565b600080610a678385611166565b905083811015610ab95760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016104c7565b9392505050565b600082821115610b125760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016104c7565b610ab982846111b0565b6001600160a01b038316610b805760405162461bcd60e51b815260206004820152602560248201527f56524332353a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104c7565b6001600160a01b038216610be25760405162461bcd60e51b815260206004820152602360248201527f56524332353a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104c7565b6001600160a01b038316600090815260208190526040902054811115610c465760405162461bcd60e51b815260206004820152601960248201527856524332353a20696e7375666669656e742062616c616e636560381b60448201526064016104c7565b6001600160a01b038316600090815260208190526040902054610c699082610ac0565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610c989082610a5a565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016109be565b6001600160a01b038216610d495760405162461bcd60e51b815260206004820152602160248201527f56524332353a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104c7565b6001600160a01b038216600090815260208190526040902054811115610dad5760405162461bcd60e51b815260206004820152601960248201527856524332353a20696e7375666669656e742062616c616e636560381b60448201526064016104c7565b600854610dba9082610ac0565b6008556001600160a01b038216600090815260208190526040902054610de09082610ac0565b6001600160a01b03831660008181526020818152604080832094909455925184815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6002600a5403610e5757604051633ee5aeb560e01b815260040160405180910390fd5b6002600a55565b6001600160a01b038216610eb45760405162461bcd60e51b815260206004820152601f60248201527f56524332353a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104c7565b600854610ec19082610a5a565b6008556001600160a01b038216600090815260208190526040902054610ee79082610a5a565b6001600160a01b038316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610e28565b600060208284031215610f4757600080fd5b81356001600160e01b031981168114610ab957600080fd5b60006020808352835180602085015260005b81811015610f8d57858101830151858201604001528201610f71565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461043c57600080fd5b60008060408385031215610fd857600080fd5b610fe183610fae565b946020939093013593505050565b60006020828403121561100157600080fd5b5035919050565b60008060006060848603121561101d57600080fd5b61102684610fae565b925061103460208501610fae565b9150604084013590509250925092565b60006020828403121561105657600080fd5b610ab982610fae565b6000806040838503121561107257600080fd5b61107b83610fae565b915061108960208401610fae565b90509250929050565b600080604083850312156110a557600080fd5b6110ae83610fae565b9150602083013580151581146110c357600080fd5b809150509250929050565b600181811c908216806110e257607f821691505b60208210810361110257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526028908201527f436f6e74726f6c6c65723a2043616c6c6572206973206e6f742074686520636f604082015267373a3937b63632b960c11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561041c5761041c611150565b6020808252601e908201527f56524332353a2063616c6c6572206973206e6f7420746865206f776e65720000604082015260600190565b8181038181111561041c5761041c61115056fea2646970667358221220977e383d9ed9db81f09501fc7cf9825244e2f21fcd54e44c20b6ed062245d23364736f6c63430008180033";

type HoneyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoneyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Honey__factory extends ContractFactory {
  constructor(...args: HoneyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Honey & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Honey__factory {
    return super.connect(runner) as Honey__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoneyInterface {
    return new Interface(_abi) as HoneyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Honey {
    return new Contract(address, _abi, runner) as unknown as Honey;
  }
}
