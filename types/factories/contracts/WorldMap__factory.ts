/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { WorldMap, WorldMapInterface } from "../../contracts/WorldMap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_buzzkillAddressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HabitatNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "HiveOnly",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHealthDeductionValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNectarValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPollenValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSapValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughResources",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "habitatId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "energyDeductionAfterForage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "incentiveEarnAfterForage",
        type: "uint256",
      },
    ],
    name: "HabitatAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Cn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Cp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Cs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_energyDeductionAfterForage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_incentiveEarnAfterForage",
        type: "uint256",
      },
    ],
    name: "addHabitat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buzzkillAddressProvider",
    outputs: [
      {
        internalType: "contract IBuzzkillAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentHabitatId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_beeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "forage",
    outputs: [
      {
        internalType: "uint256",
        name: "nectarGathered",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollenGathered",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sapGathered",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getAmountEnergyDeductionAfterForage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getAmountIncentiveEarnAfterForage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getHabitatResources",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getInitialHabitatResources",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "habitatsInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRefreshTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "energyDeductionAfterForage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "incentiveEarnAfterForage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "habitatsResources",
    outputs: [
      {
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "initialHabitatResources",
    outputs: [
      {
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resourcesDecreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526203d0906001556203d0906002556203d0906003556101f460055534801561002b57600080fd5b5060405161121438038061121483398101604081905261004a916100ef565b338061007057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100798161009f565b50600980546001600160a01b0319166001600160a01b039290921691909117905561011f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010157600080fd5b81516001600160a01b038116811461011857600080fd5b9392505050565b6110e68061012e6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063921ca4b1116100ad578063e35ef3b411610071578063e35ef3b4146102c7578063e79cd7ec146102d0578063eec584ef146102f3578063f023f4f6146102fc578063f2fde38b1461031f57600080fd5b8063921ca4b11461026a578063b6f9cf6a1461027d578063ba7f387814610286578063bd8595841461028f578063cf9d276f1461029857600080fd5b80633ab6202b116100f45780633ab6202b146101e6578063706d6ef4146101fb578063715018a61461020e5780637a03437d146102165780638da5cb5b1461024557600080fd5b806305665811146101265780631d9d868f1461017557806320839e3e146101a257806339dcc7a7146101cf575b600080fd5b610155610134366004610e44565b60066020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b610155610183366004610e44565b6000908152600860205260409020805460018201546002909201549092565b6101556101b0366004610e44565b6000908152600760205260409020805460018201546002909201549092565b6101d860055481565b60405190815260200161016c565b6101f96101f4366004610e5d565b610332565b005b610155610209366004610e98565b610664565b6101f9610b97565b610155610224366004610e44565b60076020526000908152604090208054600182015460029092015490919083565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161016c565b600954610252906001600160a01b031681565b6101d860015481565b6101d860035481565b6101d861271081565b6101556102a6366004610e44565b60086020526000908152604090208054600182015460029092015490919083565b6101d860025481565b6101d86102de366004610e44565b60009081526006602052604090206001015490565b6101d860045481565b6101d861030a366004610e44565b60009081526006602052604090206002015490565b6101f961032d366004610ecf565b610bab565b61033a610be9565b60095460408051636cfe8a9f60e01b815290516000926001600160a01b031691636cfe8a9f9160048083019260209291908290030181865afa158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190610ef3565b90506000816001600160a01b031663f8ac28436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e9190610f10565b90506000826001600160a01b0316633cf4766b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104749190610f10565b90508188108061048357508088115b156104a15760405163401cb65560e11b815260040160405180910390fd5b818710806104ae57508087115b156104cc57604051631ffb106760e21b815260040160405180910390fd5b818610806104d957508086115b156104f7576040516305a2abd160e21b815260040160405180910390fd5b6000600454905060405180606001604052808a8152602001898152602001888152506007600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060405180606001604052808a8152602001898152602001888152506008600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060405180606001604052804281526020018781526020018681525060066000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600460008154809291906105fe90610f3f565b909155505060408051828152602081018b9052908101899052606081018890526080810187905260a081018690527ffa33e270dc1dce18f42a7efa3d7fc919f6a0273079972c8ffcb16487867cf08b9060c00160405180910390a1505050505050505050565b6000806000600960009054906101000a90046001600160a01b03166001600160a01b03166318b5c9546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190610ef3565b6001600160a01b0316336001600160a01b031614610711576040516329e101a960e01b815260040160405180910390fd5b600954604080516320d399e760e21b815290516000926001600160a01b03169163834e679c9160048083019260209291908290030181865afa15801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190610ef3565b60405163f3c86ff560e01b8152600481018890529091506000906001600160a01b0383169063f3c86ff59060240161018060405180830381865afa1580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef9190610f90565b6080810151909150806108545760405162461bcd60e51b815260206004820152602260248201527f426565206d7573742068617665206120666f726167696e6720736b696c6c2073604482015261195d60f21b60648201526084015b60405180910390fd5b61085d87610c16565b60008781526007602090815260408083208054600182015460028301546009548551636cfe8a9f60e01b8152955194979396929591946001600160a01b0390911692636cfe8a9f92600480820193918290030181865afa1580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190610ef3565b90506000816001600160a01b031663f8ac28436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561092b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094f9190610f10565b9050808510801561095f57508084105b801561096a57508083105b1561098857604051630cd7666960e21b815260040160405180910390fd5b6000610992610d83565b9050818610610a36576109a76127108061102f565b600254826109b5898c61102f565b6109bf919061102f565b6109c9919061102f565b6109d39190611062565b9c50612710600554876109e6919061102f565b6109f09190611062565b87541115610a315761271060055487610a09919061102f565b610a139190611062565b876000016000828254610a269190611076565b90915550610a369050565b600087555b818510610ade57610a496127108061102f565b60025482610a57888c61102f565b610a61919061102f565b610a6b919061102f565b610a759190611062565b9b5061271060055486610a88919061102f565b610a929190611062565b87600101541115610ad65761271060055486610aae919061102f565b610ab89190611062565b876001016000828254610acb9190611076565b90915550610ade9050565b600060018801555b818410610b8657610af16127108061102f565b60025482610aff878c61102f565b610b09919061102f565b610b13919061102f565b610b1d9190611062565b9a5061271060055485610b30919061102f565b610b3a9190611062565b87600201541115610b7e5761271060055485610b56919061102f565b610b609190611062565b876002016000828254610b739190611076565b90915550610b869050565b600060028801555b505050505050505050509250925092565b610b9f610be9565b610ba96000610df4565b565b610bb3610be9565b6001600160a01b038116610bdd57604051631e4fbdf760e01b81526000600482015260240161084b565b610be681610df4565b50565b6000546001600160a01b03163314610ba95760405163118cdaa760e01b815233600482015260240161084b565b60095460408051636cfe8a9f60e01b815290516000926001600160a01b031691636cfe8a9f9160048083019260209291908290030181865afa158015610c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c849190610ef3565b600083815260066020526040812054919250610ca08242611076565b90506000836001600160a01b0316630c52bbbc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d069190610f10565b9050808210610d7c576000610d1b8284611062565b9050610d27828261102f565b60008781526006602052604081208054909190610d45908490611089565b9091555050506000858152600860209081526040808320600790925290912081548155600180830154908201556002918201549101555b5050505050565b6000610191444233604051602001610dc093929190928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b6040516020818303038152906040528051906020012060001c610de3919061109c565b610def90610320611089565b905090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610e5657600080fd5b5035919050565b600080600080600060a08688031215610e7557600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060408385031215610eab57600080fd5b50508035926020909101359150565b6001600160a01b0381168114610be657600080fd5b600060208284031215610ee157600080fd5b8135610eec81610eba565b9392505050565b600060208284031215610f0557600080fd5b8151610eec81610eba565b600060208284031215610f2257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610f5157610f51610f29565b5060010190565b604051610180810167ffffffffffffffff81118282101715610f8a57634e487b7160e01b600052604160045260246000fd5b60405290565b60006101808284031215610fa357600080fd5b610fab610f58565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152506101408084015181830152506101608084015181830152508091505092915050565b808202811582820484141761104657611046610f29565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826110715761107161104c565b500490565b8181038181111561104657611046610f29565b8082018082111561104657611046610f29565b6000826110ab576110ab61104c565b50069056fea2646970667358221220c9674a8b6688ec8fa0a56ed6277cbb145898631438d32e70f4680ef0a746728964736f6c63430008180033";

type WorldMapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldMapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldMap__factory extends ContractFactory {
  constructor(...args: WorldMapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _buzzkillAddressProvider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _buzzkillAddressProvider,
      overrides || {}
    );
  }
  override deploy(
    _buzzkillAddressProvider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_buzzkillAddressProvider, overrides || {}) as Promise<
      WorldMap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WorldMap__factory {
    return super.connect(runner) as WorldMap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldMapInterface {
    return new Interface(_abi) as WorldMapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WorldMap {
    return new Contract(address, _abi, runner) as unknown as WorldMap;
  }
}
