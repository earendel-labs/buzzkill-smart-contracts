/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { WorldMap, WorldMapInterface } from "../../contracts/WorldMap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_buzzkillAddressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HabitatNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "HiveOnly",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHealthDeductionValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNectarValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPollenValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSapValue",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughResources",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "habitatId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "energyDeductionAfterForage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "productivityBoostAfterForage",
        type: "uint256",
      },
    ],
    name: "HabitatAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Cn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Cp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Cs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_energyDeductionAfterForage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_productivityBoostAfterForage",
        type: "uint256",
      },
    ],
    name: "addHabitat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buzzkillAddressProvider",
    outputs: [
      {
        internalType: "contract IBuzzkillAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentHabitatId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_beeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "forage",
    outputs: [
      {
        internalType: "uint256",
        name: "nectarGathered",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollenGathered",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sapGathered",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getAmountEnergyDeductionAfterForage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getAmountProductivityBoostAfterForage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getHabitatResources",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_habitatId",
        type: "uint256",
      },
    ],
    name: "getInitialHabitatResources",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "habitatsInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRefreshTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "energyDeductionAfterForage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productivityBoostAfterForage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "habitatsResources",
    outputs: [
      {
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "initialHabitatResources",
    outputs: [
      {
        internalType: "uint256",
        name: "nectar",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pollen",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resourcesDecreasePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526203d0906001556203d0906002556203d0906003556101f460055534801561002b57600080fd5b5060405161124a38038061124a83398101604081905261004a916100ef565b338061007057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100798161009f565b50600980546001600160a01b0319166001600160a01b039290921691909117905561011f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010157600080fd5b81516001600160a01b038116811461011857600080fd5b9392505050565b61111c8061012e6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063921ca4b1116100ad578063dcda128f11610071578063dcda128f146102c7578063e35ef3b4146102ea578063e79cd7ec146102f3578063eec584ef14610316578063f2fde38b1461031f57600080fd5b8063921ca4b11461026a578063b6f9cf6a1461027d578063ba7f387814610286578063bd8595841461028f578063cf9d276f1461029857600080fd5b80633ab6202b116100f45780633ab6202b146101e6578063706d6ef4146101fb578063715018a61461020e5780637a03437d146102165780638da5cb5b1461024557600080fd5b806305665811146101265780631d9d868f1461017557806320839e3e146101a257806339dcc7a7146101cf575b600080fd5b610155610134366004610e9e565b60066020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b610155610183366004610e9e565b6000908152600860205260409020805460018201546002909201549092565b6101556101b0366004610e9e565b6000908152600760205260409020805460018201546002909201549092565b6101d860055481565b60405190815260200161016c565b6101f96101f4366004610eb7565b610332565b005b610155610209366004610ef2565b610664565b6101f9610bf1565b610155610224366004610e9e565b60076020526000908152604090208054600182015460029092015490919083565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161016c565b600954610252906001600160a01b031681565b6101d860015481565b6101d860035481565b6101d861271081565b6101556102a6366004610e9e565b60086020526000908152604090208054600182015460029092015490919083565b6101d86102d5366004610e9e565b60009081526006602052604090206002015490565b6101d860025481565b6101d8610301366004610e9e565b60009081526006602052604090206001015490565b6101d860045481565b6101f961032d366004610f29565b610c05565b61033a610c43565b60095460408051636cfe8a9f60e01b815290516000926001600160a01b031691636cfe8a9f9160048083019260209291908290030181865afa158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a89190610f4d565b90506000816001600160a01b031663f8ac28436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e9190610f6a565b90506000826001600160a01b0316633cf4766b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104749190610f6a565b90508188108061048357508088115b156104a15760405163401cb65560e11b815260040160405180910390fd5b818710806104ae57508087115b156104cc57604051631ffb106760e21b815260040160405180910390fd5b818610806104d957508086115b156104f7576040516305a2abd160e21b815260040160405180910390fd5b6000600454905060405180606001604052808a8152602001898152602001888152506007600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060405180606001604052808a8152602001898152602001888152506008600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060405180606001604052804281526020018781526020018681525060066000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155905050600460008154809291906105fe90610f99565b909155505060408051828152602081018b9052908101899052606081018890526080810187905260a081018690527ffa33e270dc1dce18f42a7efa3d7fc919f6a0273079972c8ffcb16487867cf08b9060c00160405180910390a1505050505050505050565b600954604080516304f4c1ad60e41b815290516000928392839233926001600160a01b031691634f4c1ad09160048083019260209291908290030181865afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d89190610f4d565b6001600160a01b0316816001600160a01b03166302d05d3f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107439190610f4d565b6001600160a01b03161461076a576040516329e101a960e01b815260040160405180910390fd5b600954604080516320d399e760e21b815290516000926001600160a01b03169163834e679c9160048083019260209291908290030181865afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190610f4d565b60405163f3c86ff560e01b8152600481018990529091506000906001600160a01b0383169063f3c86ff59060240161012060405180830381865afa158015610824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108489190610fea565b6080810151909150806108ad5760405162461bcd60e51b815260206004820152602260248201527f426565206d7573742068617665206120666f726167696e6720736b696c6c2073604482015261195d60f21b60648201526084015b60405180910390fd5b6108b688610c70565b60008881526007602090815260408083208054600182015460028301546009548551636cfe8a9f60e01b8152955194979396929591946001600160a01b0390911692636cfe8a9f92600480820193918290030181865afa15801561091e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109429190610f4d565b90506000816001600160a01b031663f8ac28436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a89190610f6a565b905080851080156109b857508084105b80156109c357508083105b156109e157604051630cd7666960e21b815260040160405180910390fd5b60006109eb610ddd565b9050818610610a8f57610a0061271080611065565b60025482610a0e898c611065565b610a189190611065565b610a229190611065565b610a2c9190611098565b9d5061271060055487610a3f9190611065565b610a499190611098565b87541115610a8a5761271060055487610a629190611065565b610a6c9190611098565b876000016000828254610a7f91906110ac565b90915550610a8f9050565b600087555b818510610b3757610aa261271080611065565b60025482610ab0888c611065565b610aba9190611065565b610ac49190611065565b610ace9190611098565b9c5061271060055486610ae19190611065565b610aeb9190611098565b87600101541115610b2f5761271060055486610b079190611065565b610b119190611098565b876001016000828254610b2491906110ac565b90915550610b379050565b600060018801555b818410610bdf57610b4a61271080611065565b60025482610b58878c611065565b610b629190611065565b610b6c9190611065565b610b769190611098565b9b5061271060055485610b899190611065565b610b939190611098565b87600201541115610bd75761271060055485610baf9190611065565b610bb99190611098565b876002016000828254610bcc91906110ac565b90915550610bdf9050565b600060028801555b50505050505050505050509250925092565b610bf9610c43565b610c036000610e4e565b565b610c0d610c43565b6001600160a01b038116610c3757604051631e4fbdf760e01b8152600060048201526024016108a4565b610c4081610e4e565b50565b6000546001600160a01b03163314610c035760405163118cdaa760e01b81523360048201526024016108a4565b60095460408051636cfe8a9f60e01b815290516000926001600160a01b031691636cfe8a9f9160048083019260209291908290030181865afa158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde9190610f4d565b600083815260066020526040812054919250610cfa82426110ac565b90506000836001600160a01b0316630c52bbbc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d609190610f6a565b9050808210610dd6576000610d758284611098565b9050610d818282611065565b60008781526006602052604081208054909190610d9f9084906110bf565b9091555050506000858152600860209081526040808320600790925290912081548155600180830154908201556002918201549101555b5050505050565b6000610191444233604051602001610e1a93929190928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b6040516020818303038152906040528051906020012060001c610e3d91906110d2565b610e49906103206110bf565b905090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610eb057600080fd5b5035919050565b600080600080600060a08688031215610ecf57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060408385031215610f0557600080fd5b50508035926020909101359150565b6001600160a01b0381168114610c4057600080fd5b600060208284031215610f3b57600080fd5b8135610f4681610f14565b9392505050565b600060208284031215610f5f57600080fd5b8151610f4681610f14565b600060208284031215610f7c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610fab57610fab610f83565b5060010190565b604051610120810167ffffffffffffffff81118282101715610fe457634e487b7160e01b600052604160045260246000fd5b60405290565b60006101208284031215610ffd57600080fd5b611005610fb2565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b808202811582820484141761107c5761107c610f83565b92915050565b634e487b7160e01b600052601260045260246000fd5b6000826110a7576110a7611082565b500490565b8181038181111561107c5761107c610f83565b8082018082111561107c5761107c610f83565b6000826110e1576110e1611082565b50069056fea2646970667358221220d84eccf4cb6d6df33c862dc5cd515307e95381558f18ac0dcf8cd809472af21c64736f6c63430008180033";

type WorldMapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldMapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldMap__factory extends ContractFactory {
  constructor(...args: WorldMapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _buzzkillAddressProvider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _buzzkillAddressProvider,
      overrides || {}
    );
  }
  override deploy(
    _buzzkillAddressProvider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_buzzkillAddressProvider, overrides || {}) as Promise<
      WorldMap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WorldMap__factory {
    return super.connect(runner) as WorldMap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldMapInterface {
    return new Interface(_abi) as WorldMapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WorldMap {
    return new Contract(address, _abi, runner) as unknown as WorldMap;
  }
}
